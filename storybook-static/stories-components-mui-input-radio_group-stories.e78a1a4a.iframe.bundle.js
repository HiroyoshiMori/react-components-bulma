"use strict";(globalThis.webpackChunk_hiroyoshi_mori_react_components_bulma=globalThis.webpackChunk_hiroyoshi_mori_react_components_bulma||[]).push([[170],{"./src/stories/components/mui/input/radio_group.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CheckedWithKey:()=>CheckedWithKey,CheckedWithVal:()=>CheckedWithVal,Default:()=>Default,Grid:()=>Grid,WithAttributes:()=>WithAttributes,WithDatasets:()=>WithDatasets,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__}),__webpack_require__("./node_modules/react/index.js");var _components__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/index.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");let __WEBPACK_DEFAULT_EXPORT__={component:_components__WEBPACK_IMPORTED_MODULE_1__.Ee,tags:["autodocs"]},Default={render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_components__WEBPACK_IMPORTED_MODULE_1__.Ee,{currentValue:"",fieldName:"radio_group",fields:[{key:"radio1"},{key:"radio2",value:"radio2Value"},{key:"radio3",value:"radio3Value",label:"Radio3 Value"},{key:"radio4",disabled:!0}],onChange:()=>{},...args})},Grid={...Default,args:{classes:{group:["columns"],radio:{wrap:["column"],label:["radio"]}}}},CheckedWithKey={...Default,args:{currentValue:"radio1"}},CheckedWithVal={...Default,args:{currentValue:"radio2Value"}},WithAttributes={...Default,args:{attributes:{"aria-label":"Radio Group"}}},WithDatasets={...Default,args:{fields:[{key:"radio1",datasets:{wrap:new Map([["id","radio1-wrap"],["name","Radio1 Wrap"]]),label:new Map([["id","radio1-label"],["name","Radio1 Label"]]),input:new Map([["id","radio1-input"],["name","Radio1 Input"]])}},{key:"radio2",value:"radio2Value",datasets:{wrap:new Map([["id","radio2-wrap"],["name","Radio2 Wrap"]]),label:new Map([["id","radio2-label"],["name","Radio2 Label"]]),input:new Map([["id","radio2-input"],["name","Radio2 Input"]])}},{key:"radio3",value:"radio3Value",label:"Radio3 Value",datasets:{wrap:new Map([["id","radio3-wrap"],["name","Radio3 Wrap"]]),label:new Map([["id","radio3-label"],["name","Radio3 Label"]]),input:new Map([["id","radio3-input"],["name","Radio3 Input"]])}},{key:"radio4",disabled:!0,datasets:{wrap:new Map([["id","radio4-wrap"],["name","Radio4 Wrap"]]),label:new Map([["id","radio4-label"],["name","Radio4 Label"]]),input:new Map([["id","radio4-input"],["name","Radio4 Input"]])}}],datasets:new Map([["id","radio-group"],["name","Radio Group"]])}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: (args: any) => <RadioGroup currentValue=\"\" fieldName=\"radio_group\" fields={[{\n    key: 'radio1'\n  }, {\n    key: 'radio2',\n    value: 'radio2Value'\n  }, {\n    key: 'radio3',\n    value: 'radio3Value',\n    label: 'Radio3 Value'\n  }, {\n    key: 'radio4',\n    disabled: true\n  }]} onChange={() => {\n    return;\n  }} {...args} />\n}",...Default.parameters?.docs?.source}}},Grid.parameters={...Grid.parameters,docs:{...Grid.parameters?.docs,source:{originalSource:'{\n  ...Default,\n  args: {\n    classes: {\n      group: ["columns"],\n      radio: {\n        wrap: ["column"],\n        label: ["radio"]\n      }\n    }\n  }\n}',...Grid.parameters?.docs?.source}}},CheckedWithKey.parameters={...CheckedWithKey.parameters,docs:{...CheckedWithKey.parameters?.docs,source:{originalSource:'{\n  ...Default,\n  args: {\n    currentValue: "radio1"\n  }\n}',...CheckedWithKey.parameters?.docs?.source}}},CheckedWithVal.parameters={...CheckedWithVal.parameters,docs:{...CheckedWithVal.parameters?.docs,source:{originalSource:'{\n  ...Default,\n  args: {\n    currentValue: "radio2Value"\n  }\n}',...CheckedWithVal.parameters?.docs?.source}}},WithAttributes.parameters={...WithAttributes.parameters,docs:{...WithAttributes.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    attributes: {\n      'aria-label': 'Radio Group'\n    }\n  }\n}",...WithAttributes.parameters?.docs?.source}}},WithDatasets.parameters={...WithDatasets.parameters,docs:{...WithDatasets.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    fields: [{\n      key: 'radio1',\n      datasets: {\n        wrap: new Map([['id', 'radio1-wrap'], ['name', 'Radio1 Wrap']]),\n        label: new Map([['id', 'radio1-label'], ['name', 'Radio1 Label']]),\n        input: new Map([['id', 'radio1-input'], ['name', 'Radio1 Input']])\n      }\n    }, {\n      key: 'radio2',\n      value: 'radio2Value',\n      datasets: {\n        wrap: new Map([['id', 'radio2-wrap'], ['name', 'Radio2 Wrap']]),\n        label: new Map([['id', 'radio2-label'], ['name', 'Radio2 Label']]),\n        input: new Map([['id', 'radio2-input'], ['name', 'Radio2 Input']])\n      }\n    }, {\n      key: 'radio3',\n      value: 'radio3Value',\n      label: 'Radio3 Value',\n      datasets: {\n        wrap: new Map([['id', 'radio3-wrap'], ['name', 'Radio3 Wrap']]),\n        label: new Map([['id', 'radio3-label'], ['name', 'Radio3 Label']]),\n        input: new Map([['id', 'radio3-input'], ['name', 'Radio3 Input']])\n      }\n    }, {\n      key: 'radio4',\n      disabled: true,\n      datasets: {\n        wrap: new Map([['id', 'radio4-wrap'], ['name', 'Radio4 Wrap']]),\n        label: new Map([['id', 'radio4-label'], ['name', 'Radio4 Label']]),\n        input: new Map([['id', 'radio4-input'], ['name', 'Radio4 Input']])\n      }\n    }],\n    datasets: new Map([['id', 'radio-group'], ['name', 'Radio Group']])\n  }\n}",...WithDatasets.parameters?.docs?.source}}};let __namedExportsOrder=["Default","Grid","CheckedWithKey","CheckedWithVal","WithAttributes","WithDatasets"]}}]);