"use strict";(globalThis.webpackChunk_hiroyoshi_mori_react_components_bulma=globalThis.webpackChunk_hiroyoshi_mori_react_components_bulma||[]).push([[147],{"./src/stories/components/layout/table/table.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,HasCaption:()=>HasCaption,HasColGroupWithCols:()=>HasColGroupWithCols,HasColGroupWithNoCols:()=>HasColGroupWithNoCols,HasFooter:()=>HasFooter,HasHeader:()=>HasHeader,InTableContainer:()=>InTableContainer,IsBordered:()=>IsBordered,IsFullWidth:()=>IsFullWidth,IsHovarable:()=>IsHovarable,IsNarrow:()=>IsNarrow,IsStriped:()=>IsStriped,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__}),__webpack_require__("./node_modules/react/index.js");var _components__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/index.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");let __WEBPACK_DEFAULT_EXPORT__={component:_components__WEBPACK_IMPORTED_MODULE_1__.iA,tags:["autodocs"]},Default={render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_components__WEBPACK_IMPORTED_MODULE_1__.iA,{body:{values:[{values:[{value:"TEST 1"},{value:"TEST 2"},{value:"TEST 3"},{value:"TEST 4"},{value:"TEST 5"}]},{values:[{value:"TEST 1"},{value:"TEST 2"},{value:"TEST 3"},{value:"TEST 4"},{value:"TEST 5"}]},{values:[{value:"TEST 1"},{value:"TEST 2"},{value:"TEST 3"},{value:"TEST 4"},{value:"TEST 5"}]}]},...args})},IsBordered={...Default,args:{isBordered:!0}},IsStriped={...Default,args:{isStriped:!0}},IsNarrow={...Default,args:{isNarrow:!0}},IsHovarable={...Default,args:{isHoverable:!0}},IsFullWidth={...Default,args:{isFullWidth:!0}},InTableContainer={...Default,args:{inTableContainer:!0}},HasHeader={...Default,args:{headers:{values:[{values:[{value:"Header 1",classes:["thead","has-background-warning-light"],attributes:{"aria-label":"thead"},datasets:new Map([["id","thead"],["name","Table header"]])},{value:"Header 2"},{value:"Header 3"},{value:"Header 4"},{value:"Header 5"}]}]}}},HasFooter={...Default,args:{footers:{values:[{values:[{value:"Footer 1",classes:["tfoot","has-background-info-light"],attributes:{"aria-label":"tfoot"},datasets:new Map([["id","tfoot"],["name","Table footer"]])},{value:"Footer 2"},{value:"Footer 3"},{value:"Footer 4"},{value:"Footer 5"}]}]}}},HasCaption={...Default,args:{caption:{classes:["caption","has-background-success-light"],attributes:{"aria-label":"Table Caption"},datasets:new Map([["id","caption"],["name","Table Caption"]]),children:"Test Caption"}}},HasColGroupWithNoCols={...Default,args:{colgroup:{span:5,classes:{group:["colgroup","has-background-primary-light"],col:[]},attributes:{"aria-label":"Col Group"},datasets:new Map([["id","colgroup"],["name","Table Col Group"]])}}},HasColGroupWithCols={...Default,args:{colgroup:{cols:[{span:1,classes:["col","has-background-link-light"],attributes:{"aria-label":"col 1"},datasets:new Map([["id","col1"],["name","Col 1"]])},{span:2,classes:["col","has-background-primary"],attributes:{"aria-label":"col 2"},datasets:new Map([["id","col2"],["name","Col 2"]])},{span:1,classes:["col"],attributes:{"aria-label":"col 3"},datasets:new Map([["id","col3"],["name","Col 3"]])},{span:1,classes:["col"],attributes:{"aria-label":"col 4"},datasets:new Map([["id","col4"],["name","Col 4"]])}]}}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  render: (args: any) => <Table body={{\n    values: [{\n      values: [{\n        value: "TEST 1"\n      },\n      // Do NOT use HTML tags in ReactNode in storybook, otherwise autodocs will be out of memory.\n      {\n        value: "TEST 2"\n      }, {\n        value: "TEST 3"\n      }, {\n        value: "TEST 4"\n      }, {\n        value: "TEST 5"\n      }]\n    }, {\n      values: [{\n        value: "TEST 1"\n      }, {\n        value: "TEST 2"\n      }, {\n        value: "TEST 3"\n      }, {\n        value: "TEST 4"\n      }, {\n        value: "TEST 5"\n      }]\n    }, {\n      values: [{\n        value: "TEST 1"\n      }, {\n        value: "TEST 2"\n      }, {\n        value: "TEST 3"\n      }, {\n        value: "TEST 4"\n      }, {\n        value: "TEST 5"\n      }]\n    }]\n  }} {...args} />\n}',...Default.parameters?.docs?.source}}},IsBordered.parameters={...IsBordered.parameters,docs:{...IsBordered.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    isBordered: true\n  }\n}",...IsBordered.parameters?.docs?.source}}},IsStriped.parameters={...IsStriped.parameters,docs:{...IsStriped.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    isStriped: true\n  }\n}",...IsStriped.parameters?.docs?.source}}},IsNarrow.parameters={...IsNarrow.parameters,docs:{...IsNarrow.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    isNarrow: true\n  }\n}",...IsNarrow.parameters?.docs?.source}}},IsHovarable.parameters={...IsHovarable.parameters,docs:{...IsHovarable.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    isHoverable: true\n  }\n}",...IsHovarable.parameters?.docs?.source}}},IsFullWidth.parameters={...IsFullWidth.parameters,docs:{...IsFullWidth.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    isFullWidth: true\n  }\n}",...IsFullWidth.parameters?.docs?.source}}},InTableContainer.parameters={...InTableContainer.parameters,docs:{...InTableContainer.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    inTableContainer: true\n  }\n}",...InTableContainer.parameters?.docs?.source}}},HasHeader.parameters={...HasHeader.parameters,docs:{...HasHeader.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    headers: {\n      values: [{\n        values: [{\n          value: \"Header 1\",\n          classes: ['thead', 'has-background-warning-light'],\n          attributes: {\n            'aria-label': 'thead'\n          },\n          datasets: new Map([['id', 'thead'], ['name', 'Table header']])\n        }, {\n          value: \"Header 2\"\n        }, {\n          value: \"Header 3\"\n        }, {\n          value: \"Header 4\"\n        }, {\n          value: \"Header 5\"\n        }]\n      }]\n    }\n  }\n}",...HasHeader.parameters?.docs?.source}}},HasFooter.parameters={...HasFooter.parameters,docs:{...HasFooter.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    footers: {\n      values: [{\n        values: [{\n          value: \"Footer 1\",\n          classes: ['tfoot', 'has-background-info-light'],\n          attributes: {\n            'aria-label': 'tfoot'\n          },\n          datasets: new Map([['id', 'tfoot'], ['name', 'Table footer']])\n        }, {\n          value: \"Footer 2\"\n        }, {\n          value: \"Footer 3\"\n        }, {\n          value: \"Footer 4\"\n        }, {\n          value: \"Footer 5\"\n        }]\n      }]\n    }\n  }\n}",...HasFooter.parameters?.docs?.source}}},HasCaption.parameters={...HasCaption.parameters,docs:{...HasCaption.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    caption: {\n      classes: ['caption', 'has-background-success-light'],\n      attributes: {\n        'aria-label': 'Table Caption'\n      },\n      datasets: new Map([['id', 'caption'], ['name', 'Table Caption']]),\n      children: \"Test Caption\"\n    }\n  }\n}",...HasCaption.parameters?.docs?.source}}},HasColGroupWithNoCols.parameters={...HasColGroupWithNoCols.parameters,docs:{...HasColGroupWithNoCols.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    colgroup: {\n      span: 5,\n      classes: {\n        group: ['colgroup', 'has-background-primary-light'],\n        col: []\n      },\n      attributes: {\n        'aria-label': 'Col Group'\n      },\n      datasets: new Map([['id', 'colgroup'], ['name', 'Table Col Group']])\n    }\n  }\n}",...HasColGroupWithNoCols.parameters?.docs?.source}}},HasColGroupWithCols.parameters={...HasColGroupWithCols.parameters,docs:{...HasColGroupWithCols.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    colgroup: {\n      cols: [{\n        span: 1,\n        classes: ['col', 'has-background-link-light'],\n        attributes: {\n          'aria-label': 'col 1'\n        },\n        datasets: new Map([['id', 'col1'], ['name', 'Col 1']])\n      }, {\n        span: 2,\n        classes: ['col', 'has-background-primary'],\n        attributes: {\n          'aria-label': 'col 2'\n        },\n        datasets: new Map([['id', 'col2'], ['name', 'Col 2']])\n      }, {\n        span: 1,\n        classes: ['col'],\n        attributes: {\n          'aria-label': 'col 3'\n        },\n        datasets: new Map([['id', 'col3'], ['name', 'Col 3']])\n      }, {\n        span: 1,\n        classes: ['col'],\n        attributes: {\n          'aria-label': 'col 4'\n        },\n        datasets: new Map([['id', 'col4'], ['name', 'Col 4']])\n      }]\n    }\n  }\n}",...HasColGroupWithCols.parameters?.docs?.source}}};let __namedExportsOrder=["Default","IsBordered","IsStriped","IsNarrow","IsHovarable","IsFullWidth","InTableContainer","HasHeader","HasFooter","HasCaption","HasColGroupWithNoCols","HasColGroupWithCols"]}}]);